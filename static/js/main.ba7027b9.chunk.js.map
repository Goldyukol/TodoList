{"version":3,"sources":["TodoList/TodoListFooter/TodoListFooter.module.css","App.module.css","AddNewItemForm/AddNewItemForm.module.css","TodoList/TodoList.module.css","TodoList/TodoListTitle/TodoListTitle.module.css","TodoList/TodoListTasks/TodoListTasks.module.css","serviceWorker.ts","DAL/api.ts","redux/reducer.ts","redux/store.ts","TodoList/TodoListTitle/TodoListTitle.tsx","AddNewItemForm/AddNewItemForm.tsx","TodoList/TodoListTasks/TodoListTask/TodoListTaskFormEdit.tsx","TodoList/TodoListTasks/TodoListTask/TodoListTaskFormInfo.tsx","TodoList/TodoListTasks/TodoListTask/TodoListTask.tsx","TodoList/TodoListTasks/TodoListTasks.tsx","TodoList/TodoListFooter/TodoListFooter.tsx","TodoList/TodoList.tsx","App.tsx","index.tsx","TodoList/TodoListTasks/TodoListTask/TodoListTask.module.css"],"names":["module","exports","filterActive","footerWrapper","footerBtns","deleteTodo","appHeader","appError","appBtnComeBack","appTodoWrapper","addNewTask","addNewTodo","error","todoWrapper","todoMain","titleSize","titleElement","deleteBtn","tasksBlock","Boolean","window","location","hostname","match","instance","axios","create","baseURL","withCredentials","headers","API-KEY","api","title","post","get","todolistId","concat","taskId","newTask","put","delete","ADD_TASK","initialState","todolists","reducer","state","arguments","length","undefined","action","type","_objectSpread","map","el","tasks","newTodolist","Object","toConsumableArray","id","obj","filter","addTodolistAC","setTasksAC","addTaskAC","changeTaskAC","changeHeaderAC","deleteTodolistAC","deleteTaskAC","store","createStore","composeWithDevTools","applyMiddleware","thunk","TodoListTitle","editMode","_this","props","activateEditMode","setState","deactivateEditMode","newText","changeHeaderTitleTC","changeHeader","e","currentTarget","value","render","react_default","a","createElement","onChange","autoFocus","onBlur","className","s","onDoubleClick","React","Component","AddNewItemForm","onAddItemButtonClick","addItem","changeOnKeyPress","key","changeValueTitle","classForInput","style","classForError","placeholder","onKeyPress","onClick","TodoListTaskFormEdit","Fragment","taskChangeElement","onTitleChanged","onDescriptionChanged","description","react_select_browser_esm","options","label","handleChange","taskSelectPriority","selectedOption","changeStartDate","changeDeadline","taskInfoBtnSave","TodoListTaskFormInfo","startDate","task","dateFormat","deadline","addedDate","priority","taskWrapperWord","taskButtons","deleteTask","taskSVG","height","viewBox","width","fill","xmlns","d","taskTitle","onChangeStatus","checked","status","taskCheckbox","TodoListTask","changeStatus","changeTitle","changeDescription","changePriority","classForTasks","taskBlock","done","taskWrapper","TodoListTask_TodoListTaskFormEdit","TodoListTask_TodoListTaskFormInfo","TodoListTasks","tasksElement","t","TodoListTasks_TodoListTask_TodoListTask","TodoListFooter","onAllFilterClick","changeFilter","onCompletedFilterClick","onActiveFilterClick","classForAll","filterValue","classForCompleted","classForActive","deleteTodolist","TodoList","addTaskTC","newFilterValue","changeTaskTC","changeHeaderTC","deleteTodolistTC","deleteTaskTC","_this$props$tasks","TodoList_TodoListTitle_TodoListTitle","src_AddNewItemForm_AddNewItemForm","TodoList_TodoListTasks_TodoListTasks","TodoList_TodoListFooter_TodoListFooter","this","getTasksTC","connectedTodolist","connect","_ref3","asyncToGenerator","regenerator_default","mark","_callee3","dispatch","res","wrap","_context3","prev","next","sent","data","items","stop","_x3","apply","_ref4","_callee4","_context4","item","resultCode","_x4","getState","find","forEach","_ref5","_callee5","_context5","_x5","_ref7","_callee7","_context7","_x7","_ref8","_callee8","_context8","_x8","_ref6","_callee6","_context6","_x6","App","nextTodoListId","onAddTodoListClick","addTodolistTC","showTodolists","showTodolistsAC","appWrapper","src_TodoList_TodoList","getTodolistsTC","ConnectedApp","_ref","_callee","_context","_x","_ref2","_callee2","_context2","_x2","ReactDOM","react_redux_es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ba7027b9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterActive\":\"TodoListFooter_filterActive__3_4K7\",\"footerWrapper\":\"TodoListFooter_footerWrapper__b6yeT\",\"footerBtns\":\"TodoListFooter_footerBtns__1iAmK\",\"deleteTodo\":\"TodoListFooter_deleteTodo__eiVAW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appHeader\":\"App_appHeader__2PTwP\",\"appError\":\"App_appError__3edhq\",\"appBtnComeBack\":\"App_appBtnComeBack__HMfwm\",\"appTodoWrapper\":\"App_appTodoWrapper__7cxLj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addNewTask\":\"AddNewItemForm_addNewTask__3ay4J\",\"addNewTodo\":\"AddNewItemForm_addNewTodo__1V9og\",\"error\":\"AddNewItemForm_error__1nkfx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoWrapper\":\"TodoList_todoWrapper__rWz_v\",\"todoMain\":\"TodoList_todoMain__1AnzC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleSize\":\"TodoListTitle_titleSize__s_EM8\",\"titleElement\":\"TodoListTitle_titleElement__3j0C5\",\"deleteBtn\":\"TodoListTitle_deleteBtn__eulOG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tasksBlock\":\"TodoListTasks_tasksBlock__1dY2O\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config: any) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: any, config: any) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: any, config: any) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.1/todo-lists',\r\n    withCredentials: true,\r\n    headers: { 'API-KEY': '715da3e8-af92-47f7-b93a-06f3404c1715' }\r\n});\r\n\r\nexport const api = {\r\n    addTodolist(title: string) {\r\n        return instance.post('', { title })\r\n    },\r\n    getTodolists() {\r\n        return instance.get('')\r\n    },\r\n    getTasks(todolistId: string) {\r\n        return instance.get(`/${todolistId}/tasks`)\r\n    },\r\n    addTask(todolistId: string, title: string) {\r\n        return instance.post(`/${todolistId}/tasks`, { title })\r\n    },\r\n    changeTask(todolistId: string, taskId: string, newTask: newTask) {\r\n        return instance.put(`/${todolistId}/tasks/${taskId}`, newTask)\r\n    },\r\n    deleteTodolist(todolistId: string) {\r\n        return instance.delete(`/${todolistId}`)\r\n    },\r\n    deleteTask(todolistId: string, taskId: string) {\r\n        return instance.delete(`${todolistId}/tasks/${taskId}`)\r\n    },\r\n    changeHeader(todolistId: string, title: string) {\r\n        return instance.put(`/${todolistId}`, { title })\r\n    },\r\n    changePriority(priority: number) {\r\n        return instance.put('/tasks/', priority)\r\n    }\r\n}","import { api } from '../DAL/api';\r\nimport {\r\n    ActionCreatorTypes,\r\n    setTodolists, addTodolist, setTasks, addTask, changeTask, changeHeader, deleteTodolist, deleteTask, showError,\r\n    showTodolists\r\n} from './types';\r\nimport { Dispatch } from 'redux';\r\n\r\nexport const SET_TODOLISTS = 'Todolist/reducer/SET_TODOLISTS'\r\nexport const ADD_TODOLIST = 'Todolist/reducer/ADD_TODOLIST'\r\nexport const SET_TASKS = 'Todolist/reducer/SET_TASKS'\r\nexport const ADD_TASK = 'Todolist/reducer/ADD_TASK'\r\nexport const CHANGE_TASK = 'Todolist/reducer/CHANGE_TASK'\r\nexport const CHANGE_HEADER = 'Todolist/reducer/CHANGE_HEADER'\r\nexport const DETELE_TODOLIST = 'Todolist/reducer/DETELE_TODOLIST'\r\nexport const DELETE_TASK = 'Todolist/reducer/DELETE_TASK'\r\nexport const SHOW_ERROR = 'Todolist/reducer/SHOW_ERROR'\r\nexport const SHOW_TODOLISTS = 'Todolist/reducer/SHOW_TODOLISTS'\r\n\r\nconst initialState: State = {\r\n    todolists: [],\r\n    error: false\r\n}\r\n\r\nconst reducer = (state: State = initialState, action: ActionCreatorTypes) => {\r\n    switch (action.type) {\r\n        case SET_TODOLISTS:\r\n            return {\r\n                ...state,\r\n                todolists: action.todolists.map(el => ({ ...el, tasks: [] }))\r\n            }\r\n        case ADD_TODOLIST:\r\n            return {\r\n                ...state,\r\n                todolists: [action.newTodolist, ...state.todolists]\r\n            }\r\n        case SET_TASKS:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(el => {\r\n                    if (el.id === action.todolistId) {\r\n                        return {\r\n                            ...el, tasks: action.tasks\r\n                        }\r\n                    } else {\r\n                        return el\r\n                    }\r\n                }\r\n                )\r\n            }\r\n        case ADD_TASK:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(el => {\r\n                    if (el.id === action.todolistId) {\r\n                        return { ...el, tasks: [action.newTask, ...el.tasks] }\r\n                    } else {\r\n                        return el;\r\n                    }\r\n                })\r\n            }\r\n        case CHANGE_TASK:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(el => {\r\n                    if (el.id === action.todolistId) {\r\n                        return {\r\n                            ...el,\r\n                            tasks: el.tasks.map(el => {\r\n                                if (el.id === action.taskId) {\r\n                                    return { ...el, ...action.obj }\r\n                                } else {\r\n                                    return el\r\n                                }\r\n                            })\r\n                        }\r\n                    } else {\r\n                        return el\r\n                    }\r\n                })\r\n            }\r\n        case CHANGE_HEADER:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(el => {\r\n                    if (el.id === action.todolistId) {\r\n                        return { ...el, ...action.title }\r\n                    } else {\r\n                        return el\r\n                    }\r\n                })\r\n            }\r\n        case DETELE_TODOLIST:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.filter(el => el.id !== action.todolistId)\r\n            }\r\n        case DELETE_TASK:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(el => {\r\n                    if (el.id === action.todolistId) {\r\n                        return {\r\n                            ...el,\r\n                            tasks: el.tasks.filter(el => el.id !== action.taskId)\r\n                        }\r\n                    } else {\r\n                        return el\r\n                    }\r\n                })\r\n            }\r\n        case SHOW_ERROR:\r\n            return {\r\n                ...state,\r\n                error: true\r\n            }\r\n        case SHOW_TODOLISTS:\r\n            return {\r\n                ...state,\r\n                error: false\r\n            }\r\n    }\r\n    return state\r\n}\r\nexport default reducer;\r\n\r\nconst setTodolistsAC = (todolists: Todolist[]): setTodolists => ({ type: SET_TODOLISTS, todolists })\r\nconst addTodolistAC = (newTodolist: Todolist): addTodolist => ({ type: ADD_TODOLIST, newTodolist })\r\nconst setTasksAC = (tasks: Task[], todolistId: string): setTasks => ({ type: SET_TASKS, tasks, todolistId })\r\nconst addTaskAC = (newTask: string, todolistId: string): addTask => ({ type: ADD_TASK, newTask, todolistId })\r\nconst changeTaskAC = (taskId: string, obj: IChangeTask, todolistId: string): changeTask => ({ type: CHANGE_TASK, taskId, obj, todolistId })\r\nconst changeHeaderAC = (todolistId: string, title: any): changeHeader => ({ type: CHANGE_HEADER, todolistId, title })\r\nconst deleteTodolistAC = (todolistId: string): deleteTodolist => ({ type: DETELE_TODOLIST, todolistId })\r\nconst deleteTaskAC = (taskId: string, todolistId: string): deleteTask => ({ type: DELETE_TASK, taskId, todolistId })\r\nconst showErrorAC = (): showError => ({ type: SHOW_ERROR })\r\nexport const showTodolistsAC = (): showTodolists => ({ type: SHOW_TODOLISTS })\r\n\r\nexport const getTodolistsTC = () => {\r\n    return async (dispatch: Dispatch<ActionCreatorTypes>) => {\r\n        const res: any = await api.getTodolists()\r\n        dispatch(setTodolistsAC(res.data))\r\n    }\r\n}\r\nexport const addTodolistTC = (title: string) => {\r\n    return async (dispatch: Dispatch<ActionCreatorTypes>) => {\r\n        const res = await api.addTodolist(title)\r\n        let newTodolist = res.data.data.item\r\n        if (res.data.resultCode === 1) {\r\n            dispatch(showErrorAC())\r\n        } else {\r\n            dispatch(addTodolistAC(newTodolist));\r\n        }\r\n    }\r\n}\r\n\r\nexport const getTasksTC = (todolistId: string) => {\r\n    return async (dispatch: Dispatch<ActionCreatorTypes>) => {\r\n        const res = await api.getTasks(todolistId)\r\n        let tasks = res.data.items\r\n        dispatch(setTasksAC(tasks, todolistId));\r\n    }\r\n}\r\n\r\nexport const addTaskTC = (todolistId: string, title: string) => {\r\n    return async (dispatch: Dispatch<ActionCreatorTypes>) => {\r\n        const res = await api.addTask(todolistId, title)\r\n        let newTask = res.data.data.item\r\n        if (res.data.resultCode === 1) {\r\n            dispatch(showErrorAC())\r\n        } else {\r\n            dispatch(addTaskAC(newTask, todolistId))\r\n        }\r\n    }\r\n}\r\n\r\nexport const changeTaskTC = (taskId: string, obj: any, todolistId: string) => {\r\n    return (dispatch: Dispatch<ActionCreatorTypes>, getState: Function) => {\r\n        const selectedTodo = getState().todolists.find((el: Todolist) => el.id === todolistId);\r\n        selectedTodo.tasks.forEach(async (el: Task) => {\r\n            if (el.id === taskId) {\r\n                const newTask = { ...el, ...obj }\r\n                const res = await api.changeTask(todolistId, taskId, newTask)\r\n                dispatch(changeTaskAC(taskId, obj, todolistId))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const changeHeaderTC = (todolistId: string, title: any) => {\r\n    return async (dispatch: Dispatch<ActionCreatorTypes>) => {\r\n        const res = await api.changeHeader(todolistId, title)\r\n        dispatch(changeHeaderAC(todolistId, { title }))\r\n    }\r\n}\r\n\r\nexport const deleteTodolistTC = (todolistId: string) => {\r\n    return async (dispatch: Dispatch<ActionCreatorTypes>) => {\r\n        const res = await api.deleteTodolist(todolistId)\r\n        dispatch(deleteTodolistAC(todolistId))\r\n    }\r\n}\r\n\r\nexport const deleteTaskTC = (taskId: string, todolistId: string) => {\r\n    return async (dispatch: Dispatch<ActionCreatorTypes>) => {\r\n        const res = await api.deleteTask(todolistId, taskId)\r\n        dispatch(deleteTaskAC(taskId, todolistId))\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from './reducer';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\r\nexport default store;\r\n","import React from 'react';\r\nimport s from './TodoListTitle.module.css';\r\ninterface IProps {\r\n    title: string\r\n    id: string\r\n    changeHeaderTitleTC: (title: string) => void\r\n}\r\nclass TodoListTitle extends React.Component<IProps> {\r\n\r\n    state = {\r\n        editMode: false,\r\n        title: this.props.title,\r\n        error: false\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        let newText = this.state.title;\r\n        if (newText === '') {\r\n            this.setState({\r\n                error: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                error: false,\r\n                title: '',\r\n                editMode: false\r\n            })\r\n            this.props.changeHeaderTitleTC(newText)\r\n        }\r\n    }\r\n\r\n    changeHeader = (e: React.FormEvent<HTMLInputElement>) => {\r\n        if (e.currentTarget.value.length > 55) {\r\n            this.setState({\r\n                error: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                title: e.currentTarget.value,\r\n                error: false\r\n            })\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        return (<div>\r\n            <div>{this.state.editMode\r\n                ? <input onChange={this.changeHeader} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.title}\r\n                    className={s.titleElement} />\r\n                : <h3 onDoubleClick={this.activateEditMode} className={s.titleSize}>{this.props.title}</h3>\r\n            }</div>\r\n        </div>);\r\n    }\r\n\r\n}\r\nexport default TodoListTitle;","import React from 'react';\r\nimport s from './AddNewItemForm.module.css';\r\ninterface IProps {\r\n    addItem: (newText: string) => void\r\n    style: string\r\n    placeholder: string\r\n}\r\nclass AddNewItemForm extends React.Component<IProps> {\r\n    state = {\r\n        error: false,\r\n        title: ''\r\n    }\r\n\r\n    onAddItemButtonClick = () => {\r\n        let newText = this.state.title;\r\n        if (newText === '') {\r\n            this.setState({\r\n                error: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                error: false,\r\n                title: ''\r\n            })\r\n            this.props.addItem(newText);\r\n        }\r\n    }\r\n\r\n    changeOnKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === 'Enter') {\r\n            this.onAddItemButtonClick()\r\n        }\r\n    }\r\n\r\n    changeValueTitle = (e: React.FormEvent<HTMLInputElement>) => {\r\n        if (e.currentTarget.value.length > 100) {\r\n            this.setState({\r\n                error: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                title: e.currentTarget.value,\r\n                error: false\r\n            })\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        const classForInput = (this.props.style === 'addNewTask') ? `${s.addNewTask}` :\r\n            (this.props.style === 'addNewTodo') ? `${s.addNewTodo}` : ''\r\n        const classForError = this.state.error === true ? `${s.error} ${classForInput}` : `${classForInput}`;\r\n        return (<div className={classForError}>\r\n            <div className={classForInput}>\r\n                <input type='text' placeholder={this.props.placeholder} onKeyPress={this.changeOnKeyPress}\r\n                    className={classForInput}\r\n                    value={this.state.title}\r\n                    onChange={this.changeValueTitle} />\r\n                <button onClick={this.onAddItemButtonClick}>ADD</button>\r\n            </div>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default AddNewItemForm;","import React, { DataHTMLAttributes } from 'react';\r\nimport s from './TodoListTask.module.css';\r\nimport Select from 'react-select';\r\nimport dateFormat from 'dateformat';\r\n\r\ninterface IProps {\r\n    onTitleChanged: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n    onDescriptionChanged: (e: React.ChangeEvent<HTMLTextAreaElement>) => void\r\n    handleChange: (selectedOption: any) => void\r\n    deactivateEditMode: () => void\r\n    changeStartDate: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n    changeDeadline: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n    title: string\r\n    description: string\r\n    selectedOption: any\r\n}\r\ninterface ISelectedOption {\r\n    value: number\r\n    label: string\r\n}\r\nclass TodoListTaskFormEdit extends React.Component<IProps> {\r\n    render = () => {\r\n        const options: ISelectedOption[] = [\r\n            { value: 0, label: 'Low' },\r\n            { value: 1, label: 'Middle' },\r\n            { value: 2, label: 'Hight' },\r\n            { value: 3, label: 'Urgently' },\r\n            { value: 4, label: 'Later' }\r\n        ];\r\n        return (<><div><span>Task name:</span><input className={s.taskChangeElement} onChange={this.props.onTitleChanged} autoFocus={true}\r\n            value={this.props.title} /></div>\r\n            <div><span>Description:</span><textarea className={s.taskChangeElement} onChange={this.props.onDescriptionChanged}\r\n                value={this.props.description} /></div>\r\n            <div><span>Priority:</span><Select options={options} onChange={this.props.handleChange} className={s.taskSelectPriority}\r\n                value={this.props.selectedOption}\r\n                onBlur={this.props.deactivateEditMode}\r\n            /></div>\r\n            <div><span>Created by: </span><input className={s.taskChangeElement} type='date' onChange={this.props.changeStartDate} /></div>\r\n            <div><span>Deadline: </span><input className={s.taskChangeElement} type='date' onChange={this.props.changeDeadline} /></div>\r\n            <button className={s.taskInfoBtnSave} onClick={this.props.deactivateEditMode}>Save</button></>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoListTaskFormEdit;\r\n","import React from 'react';\r\nimport s from './TodoListTask.module.css';\r\nimport dateFormat from 'dateformat';\r\n\r\ninterface IProps {\r\n    task: any\r\n    deleteTask: () => void\r\n    activateEditMode: () => void\r\n    onChangeStatus: (e: React.FormEvent<HTMLInputElement>) => void\r\n}\r\n\r\ninterface ISelectedOption {\r\n    value: number\r\n    label: string\r\n}\r\nclass TodoListTaskFormInfo extends React.Component<IProps> {\r\n    render = () => {\r\n        let startDate = !this.props.task.startDate ? 'set start date' : dateFormat(this.props.task.startDate, 'longDate');\r\n        let deadline = !this.props.task.deadline ? 'set deadline' : dateFormat(this.props.task.deadline, 'longDate');\r\n        let addedDate = dateFormat(this.props.task.addedDate, 'longDate');\r\n        let priority = ''\r\n        switch (this.props.task.priority) {\r\n            case 0: priority = 'Low'; break;\r\n            case 1: priority = 'Middle'; break;\r\n            case 2: priority = 'Hight'; break;\r\n            case 3: priority = 'Urgently'; break;\r\n            case 4: priority = 'Later'; break;\r\n        }\r\n        return (<div className={s.taskWrapperWord}>\r\n            <div className={s.taskButtons}><a onClick={this.props.deleteTask}>\r\n                <div className={s.taskSVG}><svg height=\"15px\" viewBox=\"0 0 512 512\" width=\"15px\" fill='#c30202' xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"m176.8125 351.1875c-4.097656 0-8.195312-1.554688-11.308594-4.691406-6.25-6.25-6.25-16.382813 0-22.632813l158.378906-158.402343c6.25-6.25 16.382813-6.25 22.632813 0 6.253906 6.25 6.253906 16.382812 0 22.636718l-158.378906 158.398438c-3.132813 3.136718-7.230469 4.691406-11.324219 4.691406zm0 0\" />\r\n                    <path d=\"m335.1875 351.1875c-4.09375 0-8.191406-1.554688-11.304688-4.691406l-158.378906-158.378906c-6.25-6.25-6.25-16.382813 0-22.632813 6.25-6.253906 16.382813-6.253906 22.632813 0l158.378906 158.398437c6.253906 6.25 6.253906 16.382813 0 22.632813-3.132813 3.117187-7.230469 4.671875-11.328125 4.671875zm0 0\" />\r\n                    <path d=\"m453.332031 512h-394.664062c-32.363281 0-58.667969-26.304688-58.667969-58.667969v-394.664062c0-32.363281 26.304688-58.667969 58.667969-58.667969h394.664062c32.363281 0 58.667969 26.304688 58.667969 58.667969v394.664062c0 32.363281-26.304688 58.667969-58.667969 58.667969zm-394.664062-480c-14.699219 0-26.667969 11.96875-26.667969 26.667969v394.664062c0 14.699219 11.96875 26.667969 26.667969 26.667969h394.664062c14.699219 0 26.667969-11.96875 26.667969-26.667969v-394.664062c0-14.699219-11.96875-26.667969-26.667969-26.667969zm0 0\" />\r\n                </svg></div></a>\r\n                <a onClick={this.props.activateEditMode}>\r\n                    <div className={s.taskSVG}><svg height=\"15px\" viewBox=\"0 -1 401.52289 401\" width=\"15px\" fill='blue' xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"m370.589844 250.972656c-5.523438 0-10 4.476563-10 10v88.789063c-.019532 16.5625-13.4375 29.984375-30 30h-280.589844c-16.5625-.015625-29.980469-13.4375-30-30v-260.589844c.019531-16.558594 13.4375-29.980469 30-30h88.789062c5.523438 0 10-4.476563 10-10 0-5.519531-4.476562-10-10-10h-88.789062c-27.601562.03125-49.96875 22.398437-50 50v260.59375c.03125 27.601563 22.398438 49.96875 50 50h280.589844c27.601562-.03125 49.96875-22.398437 50-50v-88.792969c0-5.523437-4.476563-10-10-10zm0 0\" />\r\n                        <path d=\"m376.628906 13.441406c-17.574218-17.574218-46.066406-17.574218-63.640625 0l-178.40625 178.40625c-1.222656 1.222656-2.105469 2.738282-2.566406 4.402344l-23.460937 84.699219c-.964844 3.472656.015624 7.191406 2.5625 9.742187 2.550781 2.546875 6.269531 3.527344 9.742187 2.566406l84.699219-23.464843c1.664062-.460938 3.179687-1.34375 4.402344-2.566407l178.402343-178.410156c17.546875-17.585937 17.546875-46.054687 0-63.640625zm-220.257812 184.90625 146.011718-146.015625 47.089844 47.089844-146.015625 146.015625zm-9.40625 18.875 37.621094 37.625-52.039063 14.417969zm227.257812-142.546875-10.605468 10.605469-47.09375-47.09375 10.609374-10.605469c9.761719-9.761719 25.589844-9.761719 35.351563 0l11.738281 11.734375c9.746094 9.773438 9.746094 25.589844 0 35.359375zm0 0\" />\r\n                    </svg></div></a>\r\n            </div>\r\n            <span className={s.taskTitle}>{this.props.task.title}</span>\r\n            <p>Description: <span>{!this.props.task.description ? 'set description' : this.props.task.description}</span></p>\r\n            <p>Priority: <span>{!priority ? 'set priority' : priority}</span></p>\r\n            <p>Added date: <span>{!addedDate ? 'no date added' : addedDate}</span></p>\r\n            <p>Start date: <span>{!startDate ? 'set start date' : startDate}</span></p>\r\n            <p>Deadline: <span>{!deadline ? 'set deadline' : deadline}</span></p>\r\n            <p>Done: <input onChange={this.props.onChangeStatus} type='checkbox' checked={this.props.task.status}\r\n                className={s.taskCheckbox} /></p>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default TodoListTaskFormInfo;\r\n","import React from 'react';\r\nimport s from './TodoListTask.module.css';\r\nimport TodoListTaskFormEdit from './TodoListTaskFormEdit';\r\nimport TodoListTaskFormInfo from './TodoListTaskFormInfo';\r\ninterface IProps {\r\n    task: any\r\n    changeStatus: (id: string, status: number) => void\r\n    changeTitle: (id: string, title: string) => void\r\n    changePriority: (id: string, priority: number) => void\r\n    changeDescription: (id: string, description: string) => void\r\n    changeStartDate: (id: string, startData: string) => void\r\n    changeDeadline: (id: string, deadline: string) => void\r\n    deleteTask: (id: string) => void\r\n}\r\nclass TodoListTask extends React.Component<IProps> {\r\n\r\n    state = {\r\n        editMode: false,\r\n        title: this.props.task.title,\r\n        description: this.props.task.description,\r\n        error: false,\r\n        selectedOption: null,\r\n    }\r\n\r\n    onChangeStatus = (e: React.FormEvent<HTMLInputElement>) => {\r\n        let status = e.currentTarget.checked ? 2 : 0\r\n        this.props.changeStatus(this.props.task.id, status)\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.props.changeTitle(this.props.task.id, this.state.title)\r\n        this.props.changeDescription(this.props.task.id, this.state.description)\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n    }\r\n\r\n    onTitleChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({\r\n            title: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    onDescriptionChanged = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        this.setState({\r\n            description: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    changeStartDate = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.props.changeStartDate(this.props.task.id, e.currentTarget.value)\r\n    }\r\n\r\n    changeDeadline = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.props.changeDeadline(this.props.task.id, e.currentTarget.value)\r\n    }\r\n\r\n    deleteTask = () => {\r\n        this.props.deleteTask(this.props.task.id)\r\n    }\r\n\r\n    handleChange = (selectedOption: any) => {\r\n        this.setState(\r\n            { selectedOption },\r\n            () => this.props.changePriority(this.props.task.id, selectedOption.value)\r\n        );\r\n    }\r\n\r\n    render = () => {\r\n        const classForTasks = this.props.task.status ? `${s.taskBlock} ${s.done}` : `${s.taskBlock}`;\r\n        return (\r\n            <div className={s.taskWrapper}>\r\n                <div className={classForTasks}>\r\n                    {this.state.editMode\r\n                        ? <TodoListTaskFormEdit onTitleChanged={this.onTitleChanged} onDescriptionChanged={this.onDescriptionChanged}\r\n                            title={this.state.title} description={this.state.description} handleChange={this.handleChange}\r\n                            selectedOption={this.state.selectedOption} deactivateEditMode={this.deactivateEditMode}\r\n                            changeStartDate={this.changeStartDate} changeDeadline={this.changeDeadline} />\r\n                        : <TodoListTaskFormInfo deleteTask={this.deleteTask} activateEditMode={this.activateEditMode} task={this.props.task}\r\n                            onChangeStatus={this.onChangeStatus}\r\n                        />}\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoListTask;\r\n","import React from 'react';\r\nimport s from './TodoListTasks.module.css';\r\nimport TodoListTask from './TodoListTask/TodoListTask';\r\n\r\ninterface IProps {\r\n    changeStatus: (id: string, status: number) => void\r\n    changeTitle: (id: string, title: string) => void\r\n    changePriority: (id: string, priority: number) => void\r\n    changeDescription: (id: string, description: string) => void\r\n    changeStartDate: (id: string, startDate: string) => void\r\n    changeDeadline: (id: string, deadline: string) => void\r\n    deleteTask: (id: string) => void\r\n    tasks: any;\r\n}\r\nclass TodoListTasks extends React.Component<IProps> {\r\n    render = () => {\r\n        let tasksElement = this.props.tasks.map((t: Task) => {\r\n            return <TodoListTask key={t.id} task={t} changeStatus={this.props.changeStatus} changeTitle={this.props.changeTitle}\r\n                deleteTask={this.props.deleteTask} changePriority={this.props.changePriority}\r\n                changeDescription={this.props.changeDescription}\r\n                changeStartDate={this.props.changeStartDate}\r\n                changeDeadline={this.props.changeDeadline} />\r\n        })\r\n\r\n        return (\r\n            <div className={s.tasksBlock}>\r\n                {tasksElement}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoListTasks;\r\n\r\n","import React from 'react';\r\nimport s from './TodoListFooter.module.css';\r\n\r\ninterface IProps {\r\n    changeFilter: (arg: string) => void\r\n    filterValue: string\r\n    deleteTodolist: () => void\r\n}\r\nclass TodoListFooter extends React.Component<IProps> {\r\n\r\n    onAllFilterClick = () => {\r\n        this.props.changeFilter('All')\r\n    }\r\n    onCompletedFilterClick = () => {\r\n        this.props.changeFilter('Completed')\r\n    }\r\n    onActiveFilterClick = () => {\r\n        this.props.changeFilter('Active')\r\n    }\r\n\r\n    render = () => {\r\n        const classForAll = this.props.filterValue === 'All' ? `${s.filterActive}` : `${s.footerBtns}`;\r\n        const classForCompleted = this.props.filterValue === 'Completed' ? `${s.filterActive}` : `${s.footerBtns}`;\r\n        const classForActive = this.props.filterValue === 'Active' ? `${s.filterActive}` : `${s.footerBtns}`;\r\n        return (\r\n            <div className={s.footerWrapper}>\r\n                <div onClick={this.onAllFilterClick} className={classForAll}>All</div>\r\n                <div onClick={this.onCompletedFilterClick} className={classForCompleted}>Completed</div>\r\n                <div onClick={this.onActiveFilterClick} className={classForActive}>Active</div>\r\n                <div onClick={this.props.deleteTodolist} className={s.deleteTodo}>Delete</div>\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default TodoListFooter;\r\n\r\n","import React from 'react';\r\nimport s from './TodoList.module.css';\r\nimport TodoListTitle from './TodoListTitle/TodoListTitle';\r\nimport AddNewItemForm from '../AddNewItemForm/AddNewItemForm';\r\nimport TodoListTasks from './TodoListTasks/TodoListTasks';\r\nimport TodoListFooter from './TodoListFooter/TodoListFooter';\r\nimport { connect } from 'react-redux';\r\nimport { getTasksTC, addTaskTC, changeTaskTC, deleteTodolistTC, deleteTaskTC, changeHeaderTC } from '../redux/reducer';\r\n\r\ninterface IProps {\r\n    id: string\r\n    title: string\r\n    tasks: Task[]\r\n    getTasksTC: (id: string) => void\r\n    addTaskTC: (id: string, title: string) => void\r\n    changeTaskTC: (taskId: string, obj: IChangeTask, id: string) => void\r\n    changeHeaderTC: (id: string, title: string) => void\r\n    deleteTodolistTC: (id: string) => void\r\n    deleteTaskTC: (taskId: string, id: string) => void\r\n}\r\nclass TodoList extends React.Component<IProps> {\r\n\r\n    componentDidMount() {\r\n        this.props.getTasksTC(this.props.id)\r\n    }\r\n\r\n    state = {\r\n        filterValue: 'All'\r\n    };\r\n\r\n    addItem = (title: string) => {\r\n        this.props.addTaskTC(this.props.id, title)\r\n    }\r\n\r\n    changeFilter = (newFilterValue: string) => {\r\n        this.setState({\r\n            filterValue: newFilterValue\r\n        })\r\n    }\r\n\r\n    changeTaskTC = (taskId: string, obj: IChangeTask) => {\r\n        this.props.changeTaskTC(taskId, obj, this.props.id)\r\n    }\r\n\r\n    changeStatus = (taskId: string, status: number) => {\r\n        this.changeTaskTC(taskId, { status });\r\n    }\r\n\r\n    changeTitle = (taskId: string, title: string) => {\r\n        this.changeTaskTC(taskId, { title });\r\n    }\r\n\r\n    changePriority = (taskId: string, priority: number) => {\r\n        this.changeTaskTC(taskId, { priority })\r\n    }\r\n\r\n    changeDescription = (taskId: string, description: string) => {\r\n        this.changeTaskTC(taskId, { description })\r\n    }\r\n\r\n    changeStartDate = (taskId: string, startDate: string) => {\r\n        this.changeTaskTC(taskId, { startDate })\r\n    }\r\n\r\n    changeDeadline = (taskId: string, deadline: string) => {\r\n        this.changeTaskTC(taskId, { deadline })\r\n    }\r\n\r\n    changeHeaderTitleTC = (title: string) => {\r\n        this.props.changeHeaderTC(this.props.id, title)\r\n    }\r\n\r\n    deleteTodolist = () => {\r\n        // if (window.confirm('Are you sure you want to delete this to-do list?')) {\r\n        this.props.deleteTodolistTC(this.props.id)\r\n    }\r\n\r\n    deleteTaskTC = (taskId: string) => {\r\n        this.props.deleteTaskTC(taskId, this.props.id)\r\n    }\r\n\r\n    render = () => {\r\n        let { tasks = [] } = this.props\r\n        return (\r\n            <div className={s.todoWrapper}>\r\n                <div>\r\n                    <TodoListTitle title={this.props.title}\r\n                        changeHeaderTitleTC={this.changeHeaderTitleTC}\r\n                        id={this.props.id} />\r\n                    <AddNewItemForm addItem={this.addItem} style='addNewTask' placeholder='new task' />\r\n                </div>\r\n                <div className={s.todoMain}>\r\n                    <TodoListTasks changeStatus={this.changeStatus}\r\n                        changeTitle={this.changeTitle}\r\n                        changePriority={this.changePriority}\r\n                        changeDescription={this.changeDescription}\r\n                        changeStartDate={this.changeStartDate}\r\n                        changeDeadline={this.changeDeadline}\r\n                        deleteTask={this.deleteTaskTC}\r\n                        tasks={tasks.filter(t => {\r\n                            if (this.state.filterValue === \"All\") {\r\n                                return true;\r\n                            }\r\n                            if (this.state.filterValue === \"Active\") {\r\n                                return t.status === 0;\r\n                            }\r\n                            if (this.state.filterValue === \"Completed\") {\r\n                                return t.status === 2;\r\n                            }\r\n                        })} />\r\n                    <TodoListFooter changeFilter={this.changeFilter} filterValue={this.state.filterValue}\r\n                        deleteTodolist={this.deleteTodolist} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst connectedTodolist = connect(null, {\r\n    getTasksTC, addTaskTC, changeTaskTC, deleteTodolistTC, deleteTaskTC, changeHeaderTC,\r\n})(TodoList);\r\nexport default connectedTodolist;","import React from 'react';\r\nimport s from './App.module.css';\r\nimport TodoList from './TodoList/TodoList';\r\nimport AddNewItemForm from './AddNewItemForm/AddNewItemForm'\r\nimport { connect } from 'react-redux';\r\nimport { getTodolistsTC, addTodolistTC, showTodolistsAC } from './redux/reducer';\r\n\r\ninterface IProps {\r\n    getTodolistsTC: () => void\r\n    addTodolistTC: (title: string) => void\r\n    showTodolistsAC: () => void\r\n}\r\ninterface mapStateToProps {\r\n    todolists: any[],\r\n    error: boolean\r\n}\r\n\r\ntype AppProps = IProps & mapStateToProps\r\nclass App extends React.Component<AppProps> {\r\n\r\n    componentDidMount() {\r\n        this.props.getTodolistsTC()\r\n    }\r\n\r\n    nextTodoListId = 0;\r\n\r\n    state = {\r\n        todolists: []\r\n    }\r\n\r\n    onAddTodoListClick = (title: string) => {\r\n        this.props.addTodolistTC(title)\r\n    }\r\n\r\n    showTodolists = () => {\r\n        this.props.showTodolistsAC()\r\n    }\r\n\r\n    render = () => {\r\n        return (<div className={s.appWrapper}>\r\n            {!this.props.error\r\n                ? <div>\r\n                    <div className={s.appHeader}><h1>To-do list app</h1>\r\n                        <AddNewItemForm addItem={this.onAddTodoListClick} style='addNewTodo' placeholder='new to-do list' /></div>\r\n                    <div className={s.appTodoWrapper}>\r\n                        {this.props.todolists.map((el) => <TodoList key={el.id} id={el.id} title={el.title} tasks={el.tasks} />)}\r\n                    </div>\r\n                </div>\r\n                : <div className={s.appError}>\r\n                    The maximum number of to-do lists is not more than 10,\r\n                         and tasks in the to-do list are not more than 100\r\n                    <button className={s.appBtnComeBack} onClick={this.showTodolists}>Come back</button>\r\n                </div>}\r\n        </div>);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: State): mapStateToProps => {\r\n    return {\r\n        todolists: state.todolists,\r\n        error: state.error\r\n    }\r\n}\r\n\r\nconst ConnectedApp = connect(mapStateToProps, { getTodolistsTC, addTodolistTC, showTodolistsAC })(App);\r\nexport default ConnectedApp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport s from './App.module.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskWrapper\":\"TodoListTask_taskWrapper__2GXDY\",\"taskBlock\":\"TodoListTask_taskBlock__3b92N\",\"done\":\"TodoListTask_done__26FiC\",\"taskTitle\":\"TodoListTask_taskTitle__FJzZV\",\"taskButtons\":\"TodoListTask_taskButtons__2uWoT\",\"taskCheckbox\":\"TodoListTask_taskCheckbox__3vuCh\",\"taskChangeElement\":\"TodoListTask_taskChangeElement__doRB8\",\"taskSelectPriority\":\"TodoListTask_taskSelectPriority__1VHIW\",\"taskInfoBtnSave\":\"TodoListTask_taskInfoBtnSave__3gkdP\",\"deleteBtn\":\"TodoListTask_deleteBtn__2Fw0I\",\"taskWrapperWord\":\"TodoListTask_taskWrapperWord__oNMO-\",\"taskSVG\":\"TodoListTask_taskSVG__34QxZ\"};"],"sourceRoot":""}