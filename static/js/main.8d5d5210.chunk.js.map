{"version":3,"sources":["TodoList/TodoListTasks/TodoListTask/TodoListTask.module.css","Main.module.css","TodoList/TodoListFooter/TodoListFooter.module.css","Login/Login.module.css","AddNewItemForm/AddNewItemForm.module.css","TodoList/TodoList.module.css","TodoList/TodoListTitle/TodoListTitle.module.css","TodoList/TodoListTasks/TodoListTasks.module.css","img/Loader.svg","serviceWorker.ts","DAL/api.ts","redux/TodoListsReducer.ts","redux/AuthReducer.ts","redux/store.ts","Login/Login.tsx","TodoList/TodoListTitle/TodoListTitle.tsx","AddNewItemForm/AddNewItemForm.tsx","TodoList/TodoListTasks/TodoListTask/TodoListTaskFormEdit.tsx","TodoList/TodoListTasks/TodoListTask/TodoListTaskFormInfo.tsx","TodoList/TodoListTasks/TodoListTask/TodoListTask.tsx","TodoList/TodoListTasks/TodoListTasks.tsx","TodoList/TodoListFooter/TodoListFooter.tsx","TodoList/TodoList.tsx","Main.tsx","App.tsx","index.tsx"],"names":["module","exports","taskWrapper","taskBlock","done","taskTitle","taskButtons","taskCheckbox","taskChangeElement","taskSelectPriority","taskInfoBtnSave","deleteBtn","taskWrapperWord","taskSVG","appHeader","appUserInfo","appError","appBtnComeBack","appUserInfoBtn","appTodoWrapper","appLoader","filterActive","footerWrapper","footerBtns","deleteTodo","loginWrapper","loginWord","loginForm","captcha","loginError","addNewTask","addNewTodo","error","todoWrapper","todoMain","titleSize","titleElement","tasksBlock","__webpack_require__","p","Boolean","window","location","hostname","match","authInstance","axios","create","baseURL","withCredentials","headers","API-KEY","todolistsInstance","todolistsAPI","title","post","get","todolistId","concat","taskId","newTask","put","delete","authAPI","email","password","rememberMe","SET_TASKS","ADD_TASK","initialState","todolists","todoListReducer","state","arguments","length","undefined","action","type","_objectSpread","map","el","tasks","newTodolist","Object","toConsumableArray","id","obj","filter","addTodolistAC","setTasksAC","addTaskAC","changeTaskAC","changeHeaderAC","deleteTodolistAC","deleteTaskAC","userId","login","isAuth","captchaUrl","formError","initialize","authReducer","AuthReducer_objectSpread","data","setAuthUserDataAC","authTC","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee2","dispatch","response","_response$data$data","wrap","_context2","prev","next","sent","resultCode","stop","_x2","apply","this","getCaptchaTC","_ref5","_callee5","_context5","url","_x5","rootReducer","combineReducers","app","auth","loginReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","Login","sendLoginData","_this","props","loginTC","render","react_default","createElement","react_router","to","className","s","loginInput","placeholder","onChange","e","setState","currentTarget","value","src","name","onClick","React","Component","connect","_ref3","_callee3","_context3","localStorage","setItem","token","messages","join","_x3","TodoListTitle","editMode","activateEditMode","deactivateEditMode","newText","changeHeaderTitleTC","changeHeader","autoFocus","onBlur","onDoubleClick","AddNewItemForm","onAddItemButtonClick","addItem","changeOnKeyPress","key","changeValueTitle","classForInput","style","classForError","onKeyPress","TodoListTaskFormEdit","Fragment","onTitleChanged","onDescriptionChanged","description","react_select_browser_esm","options","label","handleChange","selectedOption","changeStartDate","changeDeadline","TodoListTaskFormInfo","startDate","task","dateFormat","deadline","addedDate","priority","deleteTask","height","viewBox","width","fill","xmlns","d","onChangeStatus","checked","status","TodoListTask","changeStatus","changeTitle","changeDescription","changePriority","classForTasks","TodoListTask_TodoListTaskFormEdit","TodoListTask_TodoListTaskFormInfo","TodoListTasks","tasksElement","t","TodoListTasks_TodoListTask_TodoListTask","TodoListFooter","onAllFilterClick","changeFilter","onCompletedFilterClick","onActiveFilterClick","classForAll","filterValue","classForCompleted","classForActive","deleteTodolist","TodoList","addTaskTC","newFilterValue","changeTaskTC","changeHeaderTC","deleteTodolistTC","deleteTaskTC","_this$props$tasks","TodoList_TodoListTitle_TodoListTitle","src_AddNewItemForm_AddNewItemForm","TodoList_TodoListTasks_TodoListTasks","TodoList_TodoListFooter_TodoListFooter","getTasksTC","connectedTodolist","res","items","_ref4","_callee4","_context4","item","_x4","getState","find","forEach","_ref7","_callee7","_context7","_x7","_ref8","_callee8","_context8","_x8","_ref6","_callee6","_context6","_x6","Main","nextTodoListId","onAddTodoListClick","addTodolistTC","showTodolists","showTodolistsAC","appWrapper","logoutTC","src_TodoList_TodoList","loader","initializeAppTC","getTodolistsTC","ConnectedMain","_ref","_callee","_context","_x","promise","Promise","all","App","path","component","exact","ReactDOM","react_router_dom","react_redux_es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8d5d5210.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskWrapper\":\"TodoListTask_taskWrapper__2GXDY\",\"taskBlock\":\"TodoListTask_taskBlock__3b92N\",\"done\":\"TodoListTask_done__26FiC\",\"taskTitle\":\"TodoListTask_taskTitle__FJzZV\",\"taskButtons\":\"TodoListTask_taskButtons__2uWoT\",\"taskCheckbox\":\"TodoListTask_taskCheckbox__3vuCh\",\"taskChangeElement\":\"TodoListTask_taskChangeElement__doRB8\",\"taskSelectPriority\":\"TodoListTask_taskSelectPriority__1VHIW\",\"taskInfoBtnSave\":\"TodoListTask_taskInfoBtnSave__3gkdP\",\"deleteBtn\":\"TodoListTask_deleteBtn__2Fw0I\",\"taskWrapperWord\":\"TodoListTask_taskWrapperWord__oNMO-\",\"taskSVG\":\"TodoListTask_taskSVG__34QxZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appHeader\":\"Main_appHeader__2bTrx\",\"appUserInfo\":\"Main_appUserInfo__1Upmw\",\"appError\":\"Main_appError__u2Nd0\",\"appBtnComeBack\":\"Main_appBtnComeBack__LblHh\",\"appUserInfoBtn\":\"Main_appUserInfoBtn__2PXwb\",\"appTodoWrapper\":\"Main_appTodoWrapper__VOAcC\",\"appLoader\":\"Main_appLoader__2iX9r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterActive\":\"TodoListFooter_filterActive__3_4K7\",\"footerWrapper\":\"TodoListFooter_footerWrapper__b6yeT\",\"footerBtns\":\"TodoListFooter_footerBtns__1iAmK\",\"deleteTodo\":\"TodoListFooter_deleteTodo__eiVAW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginWrapper\":\"Login_loginWrapper__2TGEq\",\"loginWord\":\"Login_loginWord__3MS77\",\"loginForm\":\"Login_loginForm__1r5Eq\",\"captcha\":\"Login_captcha__Iyo9k\",\"loginError\":\"Login_loginError__2g_QH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addNewTask\":\"AddNewItemForm_addNewTask__3ay4J\",\"addNewTodo\":\"AddNewItemForm_addNewTodo__1V9og\",\"error\":\"AddNewItemForm_error__1nkfx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoWrapper\":\"TodoList_todoWrapper__rWz_v\",\"todoMain\":\"TodoList_todoMain__1AnzC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleSize\":\"TodoListTitle_titleSize__s_EM8\",\"titleElement\":\"TodoListTitle_titleElement__3j0C5\",\"deleteBtn\":\"TodoListTitle_deleteBtn__eulOG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tasksBlock\":\"TodoListTasks_tasksBlock__1dY2O\"};","module.exports = __webpack_public_path__ + \"static/media/Loader.2a8443db.svg\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config: any) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: any, config: any) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: any, config: any) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import axios from 'axios'\r\n\r\nconst authInstance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: { 'API-KEY': '38fc507b-a755-4b56-8169-4ab234f48af9' }\r\n});\r\n\r\nconst todolistsInstance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.1/',\r\n    withCredentials: true,\r\n    headers: { 'API-KEY': '38fc507b-a755-4b56-8169-4ab234f48af9' }\r\n});\r\n\r\nexport const todolistsAPI = {\r\n    addTodolist(title: string) {\r\n        return todolistsInstance.post('todo-lists', { title })\r\n    },\r\n    getTodolists() {\r\n        return todolistsInstance.get('todo-lists')\r\n    },\r\n    getTasks(todolistId: string) {\r\n        return todolistsInstance.get(`todo-lists/${todolistId}/tasks`)\r\n    },\r\n    addTask(todolistId: string, title: string) {\r\n        return todolistsInstance.post(`todo-lists/${todolistId}/tasks`, { title })\r\n    },\r\n    changeTask(todolistId: string, taskId: string, newTask: newTask) {\r\n        return todolistsInstance.put(`todo-lists/${todolistId}/tasks/${taskId}`, newTask)\r\n    },\r\n    deleteTodolist(todolistId: string) {\r\n        return todolistsInstance.delete(`todo-lists/${todolistId}`)\r\n    },\r\n    deleteTask(todolistId: string, taskId: string) {\r\n        return todolistsInstance.delete(`todo-lists/${todolistId}/tasks/${taskId}`)\r\n    },\r\n    changeHeader(todolistId: string, title: string) {\r\n        return todolistsInstance.put(`todo-lists/${todolistId}`, { title })\r\n    },\r\n    changePriority(priority: number) {\r\n        return todolistsInstance.put('todo-lists/tasks/', priority)\r\n    },\r\n\r\n}\r\n\r\nexport const authAPI = {\r\n    login(email: string, password: string, rememberMe: boolean, captcha: any) {\r\n        return authInstance.post(`auth/login`, { email, password, rememberMe, captcha })\r\n    },\r\n    logout() {\r\n        return authInstance.delete(`auth/login`)\r\n    },\r\n    me() {\r\n        return authInstance.get(`auth/me`)\r\n    },\r\n    getCaptchaUrl() {\r\n        return authInstance.get(`security/get-captcha-url`)\r\n    }\r\n}","import { todolistsAPI } from '../DAL/api';\r\nimport {\r\n    TodolistsACTypes,\r\n    setTodolists, addTodolist, setTasks, addTask, changeTask, changeHeader, deleteTodolist, deleteTask, showError,\r\n    showTodolists\r\n} from './types';\r\nimport { Dispatch } from 'redux';\r\n\r\nexport const SET_TODOLISTS = 'Todolist/TodoLists/SET_TODOLISTS'\r\nexport const ADD_TODOLIST = 'Todolist/TodoLists/ADD_TODOLIST'\r\nexport const SET_TASKS = 'Todolist/TodoLists/SET_TASKS'\r\nexport const ADD_TASK = 'Todolist/TodoLists/ADD_TASK'\r\nexport const CHANGE_TASK = 'Todolist/TodoLists/CHANGE_TASK'\r\nexport const CHANGE_HEADER = 'Todolist/TodoLists/CHANGE_HEADER'\r\nexport const DETELE_TODOLIST = 'Todolist/TodoLists/DETELE_TODOLIST'\r\nexport const DELETE_TASK = 'Todolist/TodoLists/DELETE_TASK'\r\nexport const SHOW_ERROR = 'Todolist/TodoLists/SHOW_ERROR'\r\nexport const SHOW_TODOLISTS = 'Todolist/TodoLists/SHOW_TODOLISTS'\r\n\r\nconst initialState: AppState = {\r\n    todolists: [],\r\n    error: false\r\n}\r\n\r\nconst todoListReducer = (state: AppState = initialState, action: TodolistsACTypes) => {\r\n    switch (action.type) {\r\n        case SET_TODOLISTS:\r\n            return {\r\n                ...state,\r\n                todolists: action.todolists.map(el => ({ ...el, tasks: [] }))\r\n            }\r\n        case ADD_TODOLIST:\r\n            return {\r\n                ...state,\r\n                todolists: [action.newTodolist, ...state.todolists]\r\n            }\r\n        case SET_TASKS:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(el => {\r\n                    if (el.id === action.todolistId) {\r\n                        return {\r\n                            ...el, tasks: action.tasks\r\n                        }\r\n                    } else {\r\n                        return el\r\n                    }\r\n                }\r\n                )\r\n            }\r\n        case ADD_TASK:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(el => {\r\n                    if (el.id === action.todolistId) {\r\n                        return { ...el, tasks: [action.newTask, ...el.tasks] }\r\n                    } else {\r\n                        return el;\r\n                    }\r\n                })\r\n            }\r\n        case CHANGE_TASK:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(el => {\r\n                    if (el.id === action.todolistId) {\r\n                        return {\r\n                            ...el,\r\n                            tasks: el.tasks.map((el: Task) => {\r\n                                if (el.id === action.taskId) {\r\n                                    return { ...el, ...action.obj }\r\n                                } else {\r\n                                    return el\r\n                                }\r\n                            })\r\n                        }\r\n                    } else {\r\n                        return el\r\n                    }\r\n                })\r\n            }\r\n        case CHANGE_HEADER:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(el => {\r\n                    if (el.id === action.todolistId) {\r\n                        return { ...el, ...action.title }\r\n                    } else {\r\n                        return el\r\n                    }\r\n                })\r\n            }\r\n        case DETELE_TODOLIST:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.filter(el => el.id !== action.todolistId)\r\n            }\r\n        case DELETE_TASK:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(el => {\r\n                    if (el.id === action.todolistId) {\r\n                        return {\r\n                            ...el,\r\n                            tasks: el.tasks.filter((el: Task) => el.id !== action.taskId)\r\n                        }\r\n                    } else {\r\n                        return el\r\n                    }\r\n                })\r\n            }\r\n        case SHOW_ERROR:\r\n            return {\r\n                ...state,\r\n                error: true\r\n            }\r\n        case SHOW_TODOLISTS:\r\n            return {\r\n                ...state,\r\n                error: false\r\n            }\r\n    }\r\n    return state\r\n}\r\nexport default todoListReducer;\r\n\r\nconst setTodolistsAC = (todolists: Todolist[]): setTodolists => ({ type: SET_TODOLISTS, todolists })\r\nconst addTodolistAC = (newTodolist: Todolist): addTodolist => ({ type: ADD_TODOLIST, newTodolist })\r\nconst setTasksAC = (tasks: Task[], todolistId: string): setTasks => ({ type: SET_TASKS, tasks, todolistId })\r\nconst addTaskAC = (newTask: string, todolistId: string): addTask => ({ type: ADD_TASK, newTask, todolistId })\r\nconst changeTaskAC = (taskId: string, obj: IChangeTask, todolistId: string): changeTask => ({ type: CHANGE_TASK, taskId, obj, todolistId })\r\nconst changeHeaderAC = (todolistId: string, title: any): changeHeader => ({ type: CHANGE_HEADER, todolistId, title })\r\nconst deleteTodolistAC = (todolistId: string): deleteTodolist => ({ type: DETELE_TODOLIST, todolistId })\r\nconst deleteTaskAC = (taskId: string, todolistId: string): deleteTask => ({ type: DELETE_TASK, taskId, todolistId })\r\nconst showErrorAC = (): showError => ({ type: SHOW_ERROR })\r\nexport const showTodolistsAC = (): showTodolists => ({ type: SHOW_TODOLISTS })\r\n\r\nexport const getTodolistsTC = () => {\r\n    return async (dispatch: Dispatch<TodolistsACTypes>) => {\r\n        const res: any = await todolistsAPI.getTodolists()\r\n        dispatch(setTodolistsAC(res.data))\r\n    }\r\n}\r\nexport const addTodolistTC = (title: string) => {\r\n    return async (dispatch: Dispatch<TodolistsACTypes>) => {\r\n        const res = await todolistsAPI.addTodolist(title)\r\n        let newTodolist = res.data.data.item\r\n        if (res.data.resultCode === 1) {\r\n            dispatch(showErrorAC())\r\n        } else {\r\n            dispatch(addTodolistAC(newTodolist));\r\n        }\r\n    }\r\n}\r\n\r\nexport const getTasksTC = (todolistId: string) => {\r\n    return async (dispatch: Dispatch<TodolistsACTypes>) => {\r\n        const res = await todolistsAPI.getTasks(todolistId)\r\n        let tasks = res.data.items\r\n        dispatch(setTasksAC(tasks, todolistId));\r\n    }\r\n}\r\n\r\nexport const addTaskTC = (todolistId: string, title: string) => {\r\n    return async (dispatch: Dispatch<TodolistsACTypes>) => {\r\n        const res = await todolistsAPI.addTask(todolistId, title)\r\n        let newTask = res.data.data.item\r\n        if (res.data.resultCode === 1) {\r\n            dispatch(showErrorAC())\r\n        } else {\r\n            dispatch(addTaskAC(newTask, todolistId))\r\n        }\r\n    }\r\n}\r\n\r\nexport const changeTaskTC = (taskId: string, obj: any, todolistId: string) => {\r\n    return (dispatch: Dispatch<TodolistsACTypes>, getState: Function) => {\r\n        const selectedTodo = getState().app.todolists.find((el: Todolist) => el.id === todolistId);\r\n        selectedTodo.tasks.forEach(async (el: Task) => {\r\n            if (el.id === taskId) {\r\n                const newTask = { ...el, ...obj }\r\n                const res = await todolistsAPI.changeTask(todolistId, taskId, newTask)\r\n                dispatch(changeTaskAC(taskId, obj, todolistId))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const changeHeaderTC = (todolistId: string, title: any) => {\r\n    return async (dispatch: Dispatch<TodolistsACTypes>) => {\r\n        const res = await todolistsAPI.changeHeader(todolistId, title)\r\n        dispatch(changeHeaderAC(todolistId, { title }))\r\n    }\r\n}\r\n\r\nexport const deleteTodolistTC = (todolistId: string) => {\r\n    return async (dispatch: Dispatch<TodolistsACTypes>) => {\r\n        const res = await todolistsAPI.deleteTodolist(todolistId)\r\n        dispatch(deleteTodolistAC(todolistId))\r\n    }\r\n}\r\n\r\nexport const deleteTaskTC = (taskId: string, todolistId: string) => {\r\n    return async (dispatch: Dispatch<TodolistsACTypes>) => {\r\n        const res = await todolistsAPI.deleteTask(todolistId, taskId)\r\n        dispatch(deleteTaskAC(taskId, todolistId))\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { Dispatch } from 'redux';\r\nimport { authAPI } from '../DAL/api';\r\nimport {\r\n    AuthACTypes,\r\n    setAuthUserData, getCaptchaUrlSuccess,\r\n    formError, initializeSuccess\r\n} from './types';\r\n\r\nexport const SET_AUTH_USER_DATA = 'Todolist/AuthReducer/SET_AUTH_USER_DATA';\r\nexport const GET_CAPTCHA_URL_SUCCESS = 'Todolist/AuthReducer/GET_CAPTCHA_URL_SUCCESS';\r\nexport const SET_FORM_ERROR = 'Todolist/AuthReducer/SET_FORM_ERROR';\r\nexport const INITIALIZE_SUCCESS = 'Todolist/AuthReducer/INITIALIZE_SUCCESS';\r\n\r\nlet initialState: AuthState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null,\r\n    formError: '',\r\n    initialize: false\r\n}\r\n\r\nconst authReducer = (state: AuthState = initialState, action: AuthACTypes) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        case SET_FORM_ERROR:\r\n            return {\r\n                ...state,\r\n                formError: action.error\r\n            }\r\n        case INITIALIZE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialize: true\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer;\r\n\r\nexport const setAuthUserDataAC = (userId: number | null, email: string | null, login: string | null, isAuth: boolean): setAuthUserData => ({ type: SET_AUTH_USER_DATA, data: { userId, email, login, isAuth } })\r\nexport const getCaptchaUrlSuccessAC = (captchaUrl: any): getCaptchaUrlSuccess => ({ type: GET_CAPTCHA_URL_SUCCESS, data: { captchaUrl } })\r\nexport const formErrorAC = (error: string): formError => ({ type: SET_FORM_ERROR, error })\r\nexport const initializeSuccessAC = (): initializeSuccess => ({ type: INITIALIZE_SUCCESS })\r\n\r\nexport const initializeAppTC = () => {\r\n    return async (dispatch: any) => {\r\n        let promise = await dispatch(authTC())\r\n        Promise.all([promise])\r\n        dispatch(initializeSuccessAC())\r\n    }\r\n}\r\n\r\nexport const authTC = () => {\r\n    return async (dispatch: Dispatch<AuthACTypes>) => {\r\n        const response = await authAPI.me()\r\n        if (response.data.resultCode === 0) {\r\n            const { id, email, login } = response.data.data\r\n            dispatch(setAuthUserDataAC(id, email, login, true));\r\n        }\r\n    }\r\n}\r\n\r\nexport const loginTC = (email: string, password: string, rememberMe: boolean, captcha: any) => {\r\n    return async (dispatch: Dispatch<any>) => {\r\n        const response = await authAPI.login(email, password, rememberMe, captcha)\r\n        if (response.data.rememberMe) {\r\n            localStorage.setItem('stringToken', response.data.token)\r\n        }\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(authTC());\r\n        } else if (response.data.resultCode === 1) {\r\n            dispatch(formErrorAC(response.data.messages.join()))\r\n        } else {\r\n            if (response.data.resultCode === 10) {\r\n                dispatch(getCaptchaTC());\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const logoutTC = () => {\r\n    return async (dispatch: Dispatch<AuthACTypes>) => {\r\n        const response = await authAPI.logout()\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserDataAC(null, null, null, false));\r\n        }\r\n    }\r\n}\r\n\r\nexport const getCaptchaTC = () => {\r\n    return async (dispatch: Dispatch<AuthACTypes>) => {\r\n        const response = await authAPI.getCaptchaUrl()\r\n        dispatch(getCaptchaUrlSuccessAC(response.data.url))\r\n    }\r\n}\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport todoListReducer from './TodoListsReducer';\r\nimport loginReducer from './AuthReducer';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst rootReducer = combineReducers({\r\n    app: todoListReducer,\r\n    auth: loginReducer\r\n})\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\nexport default store;\r\n","import React from 'react';\r\nimport s from './Login.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { loginTC } from '../redux/AuthReducer';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\ninterface mapStateToProps {\r\n    isAuth: boolean,\r\n    captchaUrl: any,\r\n    formError: string\r\n}\r\n\r\ninterface IProps {\r\n    loginTC: (email: string, password: string, rememberMe: boolean, captcha: any) => void\r\n    isAuth: boolean\r\n    captchaUrl: string\r\n    formError: string\r\n}\r\n\r\nclass Login extends React.Component<IProps> {\r\n\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        rememberMe: false,\r\n        captcha: ''\r\n    }\r\n\r\n    sendLoginData = () => {\r\n        this.props.loginTC(this.state.email, this.state.password, this.state.rememberMe, this.state.captcha)\r\n    }\r\n\r\n    render = () => {\r\n\r\n        if (this.props.isAuth) {\r\n            return <Redirect to='/' />\r\n        }\r\n\r\n        return (\r\n            <div className={s.loginWrapper}>\r\n                <div className={s.loginWord}>\r\n                    <p>Чтобы посмотреть и протестировать приложение введите данные тестового акканута:</p>\r\n                    <p>Email: free@samuraijs.com</p>\r\n                    <p>Password: free</p>\r\n                </div>\r\n                <div className={s.loginForm}>\r\n                    <span>Login</span>\r\n                    <div className={s.loginError}>{this.props.formError}</div>\r\n                    <input className={s.loginInput} type='email' placeholder='email' onChange={(e) => this.setState({ email: e.currentTarget.value })} />\r\n                    <input className={s.loginInput} type='password' placeholder='password' onChange={(e) => this.setState({ password: e.currentTarget.value })} />\r\n                    {this.props.captchaUrl && <img className={s.captcha} src={this.props.captchaUrl} />}\r\n                    {this.props.captchaUrl && <input onChange={(e) => this.setState({ captcha: e.currentTarget.value })}\r\n                        placeholder='Write symbols with image' name='captcha' />}\r\n                    <button onClick={this.sendLoginData}>Login</button>\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any): mapStateToProps => ({\r\n    isAuth: state.auth.isAuth,\r\n    captchaUrl: state.auth.captchaUrl,\r\n    formError: state.auth.formError\r\n})\r\n\r\nexport default connect(mapStateToProps, { loginTC })(Login);\r\n\r\n\r\n","import React from 'react';\r\nimport s from './TodoListTitle.module.css';\r\ninterface IProps {\r\n    title: string\r\n    id: string\r\n    changeHeaderTitleTC: (title: string) => void\r\n}\r\nclass TodoListTitle extends React.Component<IProps> {\r\n\r\n    state = {\r\n        editMode: false,\r\n        title: this.props.title,\r\n        error: false\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        let newText = this.state.title;\r\n        if (newText === '') {\r\n            this.setState({\r\n                error: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                error: false,\r\n                title: '',\r\n                editMode: false\r\n            })\r\n            this.props.changeHeaderTitleTC(newText)\r\n        }\r\n    }\r\n\r\n    changeHeader = (e: React.FormEvent<HTMLInputElement>) => {\r\n        if (e.currentTarget.value.length > 55) {\r\n            this.setState({\r\n                error: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                title: e.currentTarget.value,\r\n                error: false\r\n            })\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        return (<div>\r\n            <div>{this.state.editMode\r\n                ? <input onChange={this.changeHeader} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.title}\r\n                    className={s.titleElement} />\r\n                : <h3 onDoubleClick={this.activateEditMode} className={s.titleSize}>{this.props.title}</h3>\r\n            }</div>\r\n        </div>);\r\n    }\r\n\r\n}\r\nexport default TodoListTitle;","import React from 'react';\r\nimport s from './AddNewItemForm.module.css';\r\ninterface IProps {\r\n    addItem: (newText: string) => void\r\n    style: string\r\n    placeholder: string\r\n}\r\nclass AddNewItemForm extends React.Component<IProps> {\r\n\r\n    state = {\r\n        error: false,\r\n        title: ''\r\n    }\r\n\r\n    onAddItemButtonClick = () => {\r\n        let newText = this.state.title;\r\n        if (newText === '') {\r\n            this.setState({\r\n                error: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                error: false,\r\n                title: ''\r\n            })\r\n            this.props.addItem(newText);\r\n        }\r\n    }\r\n\r\n    changeOnKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === 'Enter') {\r\n            this.onAddItemButtonClick()\r\n        }\r\n    }\r\n\r\n    changeValueTitle = (e: React.FormEvent<HTMLInputElement>) => {\r\n        if (e.currentTarget.value.length > 100) {\r\n            this.setState({\r\n                error: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                title: e.currentTarget.value,\r\n                error: false\r\n            })\r\n        }\r\n    }\r\n    render = () => {\r\n        const classForInput = (this.props.style === 'addNewTask') ? `${s.addNewTask}` :\r\n            (this.props.style === 'addNewTodo') ? `${s.addNewTodo}` : ''\r\n        const classForError = this.state.error === true ? `${s.error} ${classForInput}` : `${classForInput}`;\r\n        return (<div className={classForError}>\r\n            <div className={classForInput}>\r\n                <input type='text' placeholder={this.props.placeholder} onKeyPress={this.changeOnKeyPress}\r\n                    className={classForInput}\r\n                    value={this.state.title}\r\n                    onChange={this.changeValueTitle} />\r\n                <button onClick={this.onAddItemButtonClick}>ADD</button>\r\n            </div>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default AddNewItemForm;","import React, { DataHTMLAttributes } from 'react';\r\nimport s from './TodoListTask.module.css';\r\nimport Select from 'react-select';\r\nimport dateFormat from 'dateformat';\r\n\r\ninterface IProps {\r\n    onTitleChanged: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n    onDescriptionChanged: (e: React.ChangeEvent<HTMLTextAreaElement>) => void\r\n    handleChange: (selectedOption: any) => void\r\n    deactivateEditMode: () => void\r\n    changeStartDate: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n    changeDeadline: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n    title: string\r\n    description: string\r\n    selectedOption: any\r\n}\r\ninterface ISelectedOption {\r\n    value: number\r\n    label: string\r\n}\r\nclass TodoListTaskFormEdit extends React.Component<IProps> {\r\n    render = () => {\r\n        const options: ISelectedOption[] = [\r\n            { value: 0, label: 'Low' },\r\n            { value: 1, label: 'Middle' },\r\n            { value: 2, label: 'Hight' },\r\n            { value: 3, label: 'Urgently' },\r\n            { value: 4, label: 'Later' }\r\n        ];\r\n        return (<><div><span>Task name:</span><input className={s.taskChangeElement} onChange={this.props.onTitleChanged} autoFocus={true}\r\n            value={this.props.title} /></div>\r\n            <div><span>Description:</span><textarea className={s.taskChangeElement} onChange={this.props.onDescriptionChanged}\r\n                value={this.props.description} /></div>\r\n            <div><span>Priority:</span><Select options={options} onChange={this.props.handleChange} className={s.taskSelectPriority}\r\n                value={this.props.selectedOption}\r\n                onBlur={this.props.deactivateEditMode}\r\n            /></div>\r\n            <div><span>Created by: </span><input className={s.taskChangeElement} type='date' onChange={this.props.changeStartDate} /></div>\r\n            <div><span>Deadline: </span><input className={s.taskChangeElement} type='date' onChange={this.props.changeDeadline} /></div>\r\n            <button className={s.taskInfoBtnSave} onClick={this.props.deactivateEditMode}>Save</button></>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoListTaskFormEdit;\r\n","import React from 'react';\r\nimport s from './TodoListTask.module.css';\r\nimport dateFormat from 'dateformat';\r\n\r\ninterface IProps {\r\n    task: any\r\n    deleteTask: () => void\r\n    activateEditMode: () => void\r\n    onChangeStatus: (e: React.FormEvent<HTMLInputElement>) => void\r\n}\r\n\r\ninterface ISelectedOption {\r\n    value: number\r\n    label: string\r\n}\r\nclass TodoListTaskFormInfo extends React.Component<IProps> {\r\n    render = () => {\r\n        let startDate = !this.props.task.startDate ? 'set start date' : dateFormat(this.props.task.startDate, 'longDate');\r\n        let deadline = !this.props.task.deadline ? 'set deadline' : dateFormat(this.props.task.deadline, 'longDate');\r\n        let addedDate = dateFormat(this.props.task.addedDate, 'longDate');\r\n        let priority = ''\r\n        switch (this.props.task.priority) {\r\n            case 0: priority = 'Low'; break;\r\n            case 1: priority = 'Middle'; break;\r\n            case 2: priority = 'Hight'; break;\r\n            case 3: priority = 'Urgently'; break;\r\n            case 4: priority = 'Later'; break;\r\n        }\r\n        return (<div className={s.taskWrapperWord}>\r\n            <div className={s.taskButtons}><a onClick={this.props.deleteTask}>\r\n                <div className={s.taskSVG}><svg height=\"15px\" viewBox=\"0 0 512 512\" width=\"15px\" fill='#c30202' xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"m176.8125 351.1875c-4.097656 0-8.195312-1.554688-11.308594-4.691406-6.25-6.25-6.25-16.382813 0-22.632813l158.378906-158.402343c6.25-6.25 16.382813-6.25 22.632813 0 6.253906 6.25 6.253906 16.382812 0 22.636718l-158.378906 158.398438c-3.132813 3.136718-7.230469 4.691406-11.324219 4.691406zm0 0\" />\r\n                    <path d=\"m335.1875 351.1875c-4.09375 0-8.191406-1.554688-11.304688-4.691406l-158.378906-158.378906c-6.25-6.25-6.25-16.382813 0-22.632813 6.25-6.253906 16.382813-6.253906 22.632813 0l158.378906 158.398437c6.253906 6.25 6.253906 16.382813 0 22.632813-3.132813 3.117187-7.230469 4.671875-11.328125 4.671875zm0 0\" />\r\n                    <path d=\"m453.332031 512h-394.664062c-32.363281 0-58.667969-26.304688-58.667969-58.667969v-394.664062c0-32.363281 26.304688-58.667969 58.667969-58.667969h394.664062c32.363281 0 58.667969 26.304688 58.667969 58.667969v394.664062c0 32.363281-26.304688 58.667969-58.667969 58.667969zm-394.664062-480c-14.699219 0-26.667969 11.96875-26.667969 26.667969v394.664062c0 14.699219 11.96875 26.667969 26.667969 26.667969h394.664062c14.699219 0 26.667969-11.96875 26.667969-26.667969v-394.664062c0-14.699219-11.96875-26.667969-26.667969-26.667969zm0 0\" />\r\n                </svg></div></a>\r\n                <a onClick={this.props.activateEditMode}>\r\n                    <div className={s.taskSVG}><svg height=\"15px\" viewBox=\"0 -1 401.52289 401\" width=\"15px\" fill='blue' xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"m370.589844 250.972656c-5.523438 0-10 4.476563-10 10v88.789063c-.019532 16.5625-13.4375 29.984375-30 30h-280.589844c-16.5625-.015625-29.980469-13.4375-30-30v-260.589844c.019531-16.558594 13.4375-29.980469 30-30h88.789062c5.523438 0 10-4.476563 10-10 0-5.519531-4.476562-10-10-10h-88.789062c-27.601562.03125-49.96875 22.398437-50 50v260.59375c.03125 27.601563 22.398438 49.96875 50 50h280.589844c27.601562-.03125 49.96875-22.398437 50-50v-88.792969c0-5.523437-4.476563-10-10-10zm0 0\" />\r\n                        <path d=\"m376.628906 13.441406c-17.574218-17.574218-46.066406-17.574218-63.640625 0l-178.40625 178.40625c-1.222656 1.222656-2.105469 2.738282-2.566406 4.402344l-23.460937 84.699219c-.964844 3.472656.015624 7.191406 2.5625 9.742187 2.550781 2.546875 6.269531 3.527344 9.742187 2.566406l84.699219-23.464843c1.664062-.460938 3.179687-1.34375 4.402344-2.566407l178.402343-178.410156c17.546875-17.585937 17.546875-46.054687 0-63.640625zm-220.257812 184.90625 146.011718-146.015625 47.089844 47.089844-146.015625 146.015625zm-9.40625 18.875 37.621094 37.625-52.039063 14.417969zm227.257812-142.546875-10.605468 10.605469-47.09375-47.09375 10.609374-10.605469c9.761719-9.761719 25.589844-9.761719 35.351563 0l11.738281 11.734375c9.746094 9.773438 9.746094 25.589844 0 35.359375zm0 0\" />\r\n                    </svg></div></a>\r\n            </div>\r\n            <span className={s.taskTitle}>{this.props.task.title}</span>\r\n            <p>Description: <span>{!this.props.task.description ? 'set description' : this.props.task.description}</span></p>\r\n            <p>Priority: <span>{!priority ? 'set priority' : priority}</span></p>\r\n            <p>Added date: <span>{!addedDate ? 'no date added' : addedDate}</span></p>\r\n            <p>Start date: <span>{!startDate ? 'set start date' : startDate}</span></p>\r\n            <p>Deadline: <span>{!deadline ? 'set deadline' : deadline}</span></p>\r\n            <p>Done: <input onChange={this.props.onChangeStatus} type='checkbox' checked={this.props.task.status}\r\n                className={s.taskCheckbox} /></p>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default TodoListTaskFormInfo;\r\n","import React from 'react';\r\nimport s from './TodoListTask.module.css';\r\nimport TodoListTaskFormEdit from './TodoListTaskFormEdit';\r\nimport TodoListTaskFormInfo from './TodoListTaskFormInfo';\r\ninterface IProps {\r\n    task: any\r\n    changeStatus: (id: string, status: number) => void\r\n    changeTitle: (id: string, title: string) => void\r\n    changePriority: (id: string, priority: number) => void\r\n    changeDescription: (id: string, description: string) => void\r\n    changeStartDate: (id: string, startData: string) => void\r\n    changeDeadline: (id: string, deadline: string) => void\r\n    deleteTask: (id: string) => void\r\n}\r\nclass TodoListTask extends React.Component<IProps> {\r\n\r\n    state = {\r\n        editMode: false,\r\n        title: this.props.task.title,\r\n        description: this.props.task.description,\r\n        error: false,\r\n        selectedOption: null,\r\n    }\r\n\r\n    onChangeStatus = (e: React.FormEvent<HTMLInputElement>) => {\r\n        let status = e.currentTarget.checked ? 2 : 0\r\n        this.props.changeStatus(this.props.task.id, status)\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.props.changeTitle(this.props.task.id, this.state.title)\r\n        this.props.changeDescription(this.props.task.id, this.state.description)\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n    }\r\n\r\n    onTitleChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({\r\n            title: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    onDescriptionChanged = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        this.setState({\r\n            description: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    changeStartDate = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.props.changeStartDate(this.props.task.id, e.currentTarget.value)\r\n    }\r\n\r\n    changeDeadline = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.props.changeDeadline(this.props.task.id, e.currentTarget.value)\r\n    }\r\n\r\n    deleteTask = () => {\r\n        this.props.deleteTask(this.props.task.id)\r\n    }\r\n\r\n    handleChange = (selectedOption: any) => {\r\n        this.setState(\r\n            { selectedOption },\r\n            () => this.props.changePriority(this.props.task.id, selectedOption.value)\r\n        );\r\n    }\r\n\r\n    render = () => {\r\n        const classForTasks = this.props.task.status ? `${s.taskBlock} ${s.done}` : `${s.taskBlock}`;\r\n        return (\r\n            <div className={s.taskWrapper}>\r\n                <div className={classForTasks}>\r\n                    {this.state.editMode\r\n                        ? <TodoListTaskFormEdit onTitleChanged={this.onTitleChanged} onDescriptionChanged={this.onDescriptionChanged}\r\n                            title={this.state.title} description={this.state.description} handleChange={this.handleChange}\r\n                            selectedOption={this.state.selectedOption} deactivateEditMode={this.deactivateEditMode}\r\n                            changeStartDate={this.changeStartDate} changeDeadline={this.changeDeadline} />\r\n                        : <TodoListTaskFormInfo deleteTask={this.deleteTask} activateEditMode={this.activateEditMode} task={this.props.task}\r\n                            onChangeStatus={this.onChangeStatus}\r\n                        />}\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoListTask;\r\n","import React from 'react';\r\nimport s from './TodoListTasks.module.css';\r\nimport TodoListTask from './TodoListTask/TodoListTask';\r\n\r\ninterface IProps {\r\n    changeStatus: (id: string, status: number) => void\r\n    changeTitle: (id: string, title: string) => void\r\n    changePriority: (id: string, priority: number) => void\r\n    changeDescription: (id: string, description: string) => void\r\n    changeStartDate: (id: string, startDate: string) => void\r\n    changeDeadline: (id: string, deadline: string) => void\r\n    deleteTask: (id: string) => void\r\n    tasks: Task[];\r\n}\r\nclass TodoListTasks extends React.Component<IProps> {\r\n    render = () => {\r\n        let tasksElement = this.props.tasks.map((t: Task) => {\r\n            return <TodoListTask key={t.id} task={t} changeStatus={this.props.changeStatus} changeTitle={this.props.changeTitle}\r\n                deleteTask={this.props.deleteTask} changePriority={this.props.changePriority}\r\n                changeDescription={this.props.changeDescription}\r\n                changeStartDate={this.props.changeStartDate}\r\n                changeDeadline={this.props.changeDeadline} />\r\n        })\r\n\r\n        return (\r\n            <div className={s.tasksBlock}>\r\n                {tasksElement}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoListTasks;\r\n\r\n","import React from 'react';\r\nimport s from './TodoListFooter.module.css';\r\n\r\ninterface IProps {\r\n    changeFilter: (arg: string) => void\r\n    filterValue: string\r\n    deleteTodolist: () => void\r\n}\r\nclass TodoListFooter extends React.Component<IProps> {\r\n\r\n    onAllFilterClick = () => {\r\n        this.props.changeFilter('All')\r\n    }\r\n    onCompletedFilterClick = () => {\r\n        this.props.changeFilter('Completed')\r\n    }\r\n    onActiveFilterClick = () => {\r\n        this.props.changeFilter('Active')\r\n    }\r\n\r\n    render = () => {\r\n        const classForAll = this.props.filterValue === 'All' ? `${s.filterActive}` : `${s.footerBtns}`;\r\n        const classForCompleted = this.props.filterValue === 'Completed' ? `${s.filterActive}` : `${s.footerBtns}`;\r\n        const classForActive = this.props.filterValue === 'Active' ? `${s.filterActive}` : `${s.footerBtns}`;\r\n        return (\r\n            <div className={s.footerWrapper}>\r\n                <div onClick={this.onAllFilterClick} className={classForAll}>All</div>\r\n                <div onClick={this.onCompletedFilterClick} className={classForCompleted}>Completed</div>\r\n                <div onClick={this.onActiveFilterClick} className={classForActive}>Active</div>\r\n                <div onClick={this.props.deleteTodolist} className={s.deleteTodo}>Delete</div>\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default TodoListFooter;\r\n\r\n","import React from 'react';\r\nimport s from './TodoList.module.css';\r\nimport TodoListTitle from './TodoListTitle/TodoListTitle';\r\nimport AddNewItemForm from '../AddNewItemForm/AddNewItemForm';\r\nimport TodoListTasks from './TodoListTasks/TodoListTasks';\r\nimport TodoListFooter from './TodoListFooter/TodoListFooter';\r\nimport { connect } from 'react-redux';\r\nimport { getTasksTC, addTaskTC, changeTaskTC, deleteTodolistTC, deleteTaskTC, changeHeaderTC } from '../redux/TodoListsReducer';\r\n\r\ninterface IProps {\r\n    id: string\r\n    title: string\r\n    tasks: Task[]\r\n    getTasksTC: (id: string) => void\r\n    addTaskTC: (id: string, title: string) => void\r\n    changeTaskTC: (taskId: string, obj: IChangeTask, id: string) => void\r\n    changeHeaderTC: (id: string, title: string) => void\r\n    deleteTodolistTC: (id: string) => void\r\n    deleteTaskTC: (taskId: string, id: string) => void\r\n}\r\nclass TodoList extends React.Component<IProps> {\r\n\r\n    componentDidMount() {\r\n        this.props.getTasksTC(this.props.id)\r\n    }\r\n\r\n    state = {\r\n        filterValue: 'All'\r\n    };\r\n\r\n    addItem = (title: string) => {\r\n        this.props.addTaskTC(this.props.id, title)\r\n    }\r\n\r\n    changeFilter = (newFilterValue: string) => {\r\n        this.setState({\r\n            filterValue: newFilterValue\r\n        })\r\n    }\r\n\r\n    changeTaskTC = (taskId: string, obj: IChangeTask) => {\r\n        this.props.changeTaskTC(taskId, obj, this.props.id)\r\n    }\r\n\r\n    changeStatus = (taskId: string, status: number) => {\r\n        this.changeTaskTC(taskId, { status });\r\n    }\r\n\r\n    changeTitle = (taskId: string, title: string) => {\r\n        this.changeTaskTC(taskId, { title });\r\n    }\r\n\r\n    changePriority = (taskId: string, priority: number) => {\r\n        this.changeTaskTC(taskId, { priority })\r\n    }\r\n\r\n    changeDescription = (taskId: string, description: string) => {\r\n        this.changeTaskTC(taskId, { description })\r\n    }\r\n\r\n    changeStartDate = (taskId: string, startDate: string) => {\r\n        this.changeTaskTC(taskId, { startDate })\r\n    }\r\n\r\n    changeDeadline = (taskId: string, deadline: string) => {\r\n        this.changeTaskTC(taskId, { deadline })\r\n    }\r\n\r\n    changeHeaderTitleTC = (title: string) => {\r\n        this.props.changeHeaderTC(this.props.id, title)\r\n    }\r\n\r\n    deleteTodolist = () => {\r\n        // if (window.confirm('Are you sure you want to delete this to-do list?')) {\r\n        this.props.deleteTodolistTC(this.props.id)\r\n    }\r\n\r\n    deleteTaskTC = (taskId: string) => {\r\n        this.props.deleteTaskTC(taskId, this.props.id)\r\n    }\r\n\r\n    render = () => {\r\n        let { tasks = [] } = this.props\r\n        return (\r\n            <div className={s.todoWrapper}>\r\n                <div>\r\n                    <TodoListTitle title={this.props.title}\r\n                        changeHeaderTitleTC={this.changeHeaderTitleTC}\r\n                        id={this.props.id} />\r\n                    <AddNewItemForm addItem={this.addItem} style='addNewTask' placeholder='new task' />\r\n                </div>\r\n                <div className={s.todoMain}>\r\n                    <TodoListTasks changeStatus={this.changeStatus}\r\n                        changeTitle={this.changeTitle}\r\n                        changePriority={this.changePriority}\r\n                        changeDescription={this.changeDescription}\r\n                        changeStartDate={this.changeStartDate}\r\n                        changeDeadline={this.changeDeadline}\r\n                        deleteTask={this.deleteTaskTC}\r\n                        tasks={tasks.filter(t => {\r\n                            if (this.state.filterValue === \"All\") {\r\n                                return true;\r\n                            }\r\n                            if (this.state.filterValue === \"Active\") {\r\n                                return t.status === 0;\r\n                            }\r\n                            if (this.state.filterValue === \"Completed\") {\r\n                                return t.status === 2;\r\n                            }\r\n                        })} />\r\n                    <TodoListFooter changeFilter={this.changeFilter} filterValue={this.state.filterValue}\r\n                        deleteTodolist={this.deleteTodolist} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst connectedTodolist = connect(null, {\r\n    getTasksTC, addTaskTC, changeTaskTC, deleteTodolistTC, deleteTaskTC, changeHeaderTC,\r\n})(TodoList);\r\nexport default connectedTodolist;","import React from 'react';\r\nimport s from './Main.module.css';\r\nimport TodoList from './TodoList/TodoList';\r\nimport AddNewItemForm from './AddNewItemForm/AddNewItemForm'\r\nimport { connect } from 'react-redux';\r\nimport { getTodolistsTC, addTodolistTC, showTodolistsAC } from './redux/TodoListsReducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { logoutTC, initializeAppTC } from './redux/AuthReducer';\r\nimport loader from './img/Loader.svg'\r\n\r\ninterface IProps {\r\n    getTodolistsTC: () => void\r\n    addTodolistTC: (title: string) => void\r\n    showTodolistsAC: () => void\r\n    logoutTC: () => void\r\n    initializeAppTC: () => void\r\n\r\n}\r\ninterface mapStateToProps {\r\n    todolists: Todolist[]\r\n    error: boolean\r\n    isAuth: boolean\r\n    userId: number\r\n    login: string\r\n    initialize: boolean\r\n}\r\n\r\ntype AppProps = IProps & mapStateToProps\r\n\r\nclass Main extends React.Component<AppProps> {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeAppTC()\r\n        this.props.getTodolistsTC()\r\n    }\r\n\r\n    nextTodoListId = 0;\r\n\r\n    state = {\r\n        todolists: []\r\n    }\r\n\r\n    onAddTodoListClick = (title: string) => {\r\n        this.props.addTodolistTC(title)\r\n    }\r\n\r\n    showTodolists = () => {\r\n        this.props.showTodolistsAC()\r\n    }\r\n\r\n    render = () => {\r\n        if (!this.props.initialize) {\r\n            return <img className={s.appLoader} src={loader} />\r\n        }\r\n        if (!this.props.isAuth) {\r\n            return <Redirect to='/login' />\r\n        }\r\n        return (<div className={s.appWrapper}>\r\n            {!this.props.error\r\n                ? <div>\r\n                    <div className={s.appHeader}><h1>To-do list app</h1>\r\n                        <AddNewItemForm addItem={this.onAddTodoListClick} style='addNewTodo' placeholder='new to-do list' />\r\n                        <div className={s.appUserInfo}>\r\n                            <div>id: {this.props.userId}</div>\r\n                            <div>login: {this.props.login}</div>\r\n                            <button onClick={this.props.logoutTC} className={s.appUserInfoBtn}>Logout</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={s.appTodoWrapper}>\r\n                        {this.props.todolists.map((el) => <TodoList key={el.id} id={el.id} title={el.title} tasks={el.tasks} />)}\r\n                    </div>\r\n\r\n                </div>\r\n                : <div className={s.appError}>\r\n                    The maximum number of to-do lists is not more than 10,\r\n                         and tasks in the to-do list are not more than 100\r\n                    <button className={s.appBtnComeBack} onClick={this.showTodolists}>Come back</button>\r\n                </div>}\r\n        </div>);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any): mapStateToProps => ({\r\n    todolists: state.app.todolists,\r\n    error: state.app.error,\r\n    isAuth: state.auth.isAuth,\r\n    userId: state.auth.userId,\r\n    login: state.auth.login,\r\n    initialize: state.auth.initialize\r\n})\r\n\r\nconst ConnectedMain = connect(mapStateToProps, { getTodolistsTC, addTodolistTC, showTodolistsAC, logoutTC, initializeAppTC })(Main);\r\nexport default ConnectedMain;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport Login from './Login/Login'\r\nimport Main from './Main'\r\n\r\nclass App extends React.Component {\r\n    render = () => {\r\n        return (<div>\r\n            <Route path='/login' component={Login} />\r\n            <Route exact path='/' component={Main} />\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App'\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </HashRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}